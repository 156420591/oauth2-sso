plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

description = "微服务服务网关和客户端结合 自动刷新token"


group = "io.lpgph"
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    set("springCloudVersion", "Hoxton.SR8")

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    compile.exclude group: "junit", module: "junit"
    compile.exclude module: 'spring-boot-starter-logging'
    compile.exclude module: 'log4j'
    compile.exclude module: 'slf4j-log4j12'
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-log4j2")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation('org.springframework.cloud:spring-cloud-starter-gateway')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    implementation('org.springframework.boot:spring-boot-starter-actuator')

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    implementation("org.springframework.boot:spring-boot-starter-data-redis")
//    // redis 关联
//    implementation("org.apache.commons:commons-pool2")
//
//    implementation("org.springframework.session:spring-session-data-redis")

//    //使用lombok 简化
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/releases" }
    maven { url "https://maven.aliyun.com/repository/spring" }
    mavenCentral()
    jcenter()

}